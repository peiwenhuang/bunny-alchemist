/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Marbles studio (https://sketchfab.com/marblesstudio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stylized-plant-pack-d866603021fa4939b8e7bc28f22bb47c
Title: Stylized Plant Pack
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";

import { Sphere } from "@react-three/drei";

import plantPath from "../../assets/garden/stylized_plant_pack.glb";

export function Plant({ clickable, setClickable, type, handleSetDialogScene, position = [0, 0, 0], scale = 1.5 }) {
    const ref = useRef();
    const { nodes, materials } = useGLTF(plantPath);

    const tl = new gsap.timeline({
        defaults: {duration: 0.6, delay: 0.01} 
    });

    const handleHoverIn = () => {
        if(clickable) {
            tl.to(ref.current.scale, {
                x: ref.current.scale.x * 1.1,
                y: ref.current.scale.y * 1.1,
                z: ref.current.scale.z * 1.1,
            });
        }
    };

    const handleHoverOut = () => {
        if(clickable) {
            tl.to(ref.current.scale, {
                x: ref.current.scale.x / 1.1,
                y: ref.current.scale.y / 1.1,
                z: ref.current.scale.z / 1.1,
            });
        }
    };

    if(type === "chamomile") {
        return (
            <group ref={ref} rotation={[- Math.PI / 2, 0, 0]} dispose={null}
            onClick={handleSetDialogScene}
            onPointerEnter={handleHoverIn}
            onPointerLeave={handleHoverOut}>
                <group>
                    <Sphere castShadow receiveShadow scale={8} position={position}>
                        <meshPhysicalMaterial attach="material"
                        roughness={0.01} transmission={1.2} thickness={0.4}/>
                    </Sphere>
                    <mesh
                    position={[position[0] + 0.5, position[1], position[2] - 5]}
                    scale={scale}
                    rotation={[0, 0, Math.PI]}
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_5.geometry}
                    material={materials.White_Flower}
                    
                    />
                </group>
            </group>
        );
    }
    if(type === "evening-primrose") {
        return (
            <group ref={ref} rotation={[- Math.PI / 2, 0, 0]} dispose={null}
            onClick={handleSetDialogScene}
            onPointerEnter={handleHoverIn}
            onPointerLeave={handleHoverOut}>
                <group>
                    <Sphere castShadow receiveShadow scale={8} position={position}>
                        <meshPhysicalMaterial attach="material"
                        roughness={0.01} transmission={1.2} thickness={0.4}/>
                    </Sphere>
                    <mesh
                    position={[position[0], position[1] - 5, position[2] - 4]}
                    scale={scale}
                    rotation={[0, 0, - Math.PI / 2]}
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_6.geometry}
                    material={materials.Yellow_Flower}
                    
                    />
                </group>
            </group>
        );
    }
    if(type === "rose") {
        return (
            <group ref={ref} rotation={[- Math.PI / 2, 0, 0]} dispose={null}
            onClick={handleSetDialogScene}
            onPointerEnter={handleHoverIn}
            onPointerLeave={handleHoverOut}>
                <group>
                    <Sphere castShadow receiveShadow scale={8} position={position}>
                        <meshPhysicalMaterial attach="material"
                        roughness={0.01} transmission={1.2} thickness={0.4}/>
                    </Sphere>
                    <mesh
                    position={[position[0] - 5, position[1] - 2, position[2] - 5]}
                    scale={scale}
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_2.geometry}
                    material={materials.Rose}
                    />
                </group>
            </group>
        );
    }
}

useGLTF.preload(plantPath);